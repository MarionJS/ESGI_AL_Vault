name: build,test and deploy for API_Library
on:
  push:
    paths:
      - 'BACK/**'
      - '.github/workflows/workflow-back-library.yaml'

defaults:
  run:
    working-directory: ./BACK/API.Library

jobs:
  api-library:
    runs-on: ubuntu-latest
    env:
      SpecFlowDirectory : Tests/Library.Tests.Specs
      SpecFlowTestAssemblyPath : bin/Release/net6.0/Library.Tests.Specs.dll
      SpecFlowTestExecutionPath : bin/Release/net6.0/TestExecution.json
    steps:    
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - name: Build all projects
        run: dotnet build -c Release
        shell: bash
      - name: Run tests
        run: dotnet test --no-build -c Release -v minimal
        shell: bash
      - name: Generate SpecFlow LivingDoc
        run: |
          dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
          livingdoc test-assembly $SpecFlowDirectory/$SpecFlowTestAssemblyPath -t $SpecFlowDirectory/$SpecFlowTestExecutionPath -o LivingDoc.html
        shell: bash
      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: SpecflowTestResults
          path: BACK/API.Library/LivingDoc.html
      - run : |
          cd API/Library.API/bin/Release/net6.0
          sed -i "s/DB_USER/${{ secrets.DB_USER }}/g" appsettings.json
          sed -i "s/DB_PASSWORD/${{ secrets.DB_PASSWORD }}/g" appsettings.json
      - name: copying build files in distant server using SSH connexion
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./BACK/API.Library/API/Library.API/bin/Release/net6.0
          target: API_Library
      - name: restart dotnet API on the server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: sudo systemctl restart API_Library.service
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - id: nextversion
        name: next release version
        uses: jenkins-x-plugins/jx-release-version@v2.5.2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.nextversion.outputs.version }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          target_commitish: ${{ github.ref }}